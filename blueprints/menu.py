from loguru import logger
from vkwave.bots import DefaultRouter, SimpleBotEvent, \
    simple_bot_message_handler, PayloadFilter, TextContainsFilter

from mpetsapi import MpetsApi
from sql import crud
from keyboards.kb import CONFIRMATION, menu
from utils.constants import user_task_log, club_task_log, collections
from utils.functions import notice

menu_router = DefaultRouter()


@simple_bot_message_handler(menu_router,
                            PayloadFilter({"command": "menu"}))
async def back_menu(event: SimpleBotEvent):
    user = event["current_user"]
    await menu(user, event)


@simple_bot_message_handler(menu_router,
                            TextContainsFilter(
                                ["/report"]))
async def report(event: SimpleBotEvent):
    user = event["current_user"]
    try:
        msg = event.object.object.message.text.split(" ", maxsplit=1)[1]
    except Exception as e:
        msg = "Null"
        await event.answer("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ!\n\n"
                           "–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —É–∫–∞–∑–∞—Ç—å –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É —Å—Ä–∞–∑—É:\n"
                           "/report ¬´–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ –∑–∞—á–µ–º –æ–Ω–∏ –Ω—É–∂–Ω—ã?¬ª\n"
                           "–¢–∞–∫ –í–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ –±—É–¥–µ—Ç —Ä–µ—à–µ–Ω–∞ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.")
    text = f"{user.first_name} {user.last_name} ({user.user_id}) –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ " \
           f"–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏.\n\n" \
           f"–ï–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: ¬´{msg}¬ª"
    notice(message=text)


@simple_bot_message_handler(menu_router,
                            TextContainsFilter(
                                ["/logs"]))
async def logs(event: SimpleBotEvent):
    user = event["current_user"]
    user_id = user.user_id
    try:
        msg = event.object.object.message.text.split()
        if len(msg) == 2 and user.access >= 3:
            user_id = int(msg[1])
    except Exception as e:
        pass
    text = "–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞–≥—Ä–∞–¥\n\n"
    text += f"‚úèÔ∏è –õ–∏—á–Ω—ã–µ: \n"
    user_log = crud.get_user_task_log(user_id=user_id)
    club_log = crud.get_club_task_log(user_id=user_id)
    collection_log = crud.get_collection_log(user_id=user_id)
    for task in user_log:
        task_name = task.task_name
        if "anketa" in task.task_name:
            task_name = task_name.split("_", maxsplit=1)[0]
        text += f"{user_task_log[task_name]} ‚Äî {task.tasks} üåº –∏ {task.points} üèÖ\n"
    text += f"\nüéà–ö–ª—É–±–Ω—ã–µ:\n"
    for task in club_log:
        task_name = task.task_name
        if "send_specific_gift_any_player" in task.task_name or \
                "get_gift" in task.task_name or \
                "send_gift_any_player" in task.task_name or \
                "get_random_gift" in task.task_name:
            task_name = task_name.rsplit("_", maxsplit=1)[0]
        text += f"{club_task_log[task_name]} ‚Äî {task.tasks} üåº –∏ {task.points} üèÖ\n"
    text += f"\nüß© –ö–æ–ª–ª–µ–∫—Ü–∏–∏: \n"
    for collection in collection_log:
        collection_icon = collections[collection.collection_id]['required'][collection.part_id-1]['icon']
        text += f"{collections[collection.collection_id]['name']} ‚Äî {collection_icon} \n"
    await event.answer(message=text)


@simple_bot_message_handler(menu_router)
async def main(event: SimpleBotEvent):
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
    current_user = event["current_user"]
    if current_user.status == 'waiting_name':
        mpets = MpetsApi()
        await mpets.start()
        msg, pet = event.object.object.message.text, None
        # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–≤–æ–π id, —Ç–æ –∏—â–µ–º –ø–æ id. –ï—Å–ª–∏ –ø–æ id –Ω–∞–π—Ç–∏ –Ω–µ—É–¥–∞–ª–æ—Å—å, 
        # —Ç–æ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –µ—â–µ –∏ –ø–æ –Ω–∏–∫—É.
        if msg.isdigit():
            pet = await mpets.view_profile(pet_id=msg)
            if pet["status"] != "ok":
                pet = await mpets.find_pet(name=msg)
                if pet["status"] == "ok":
                    pet = await mpets.view_profile(pet_id=pet["pet_id"])
        else:
            pet = await mpets.find_pet(name=msg)
            if pet["status"] == "ok":
                pet = await mpets.view_profile(pet_id=pet["pet_id"])
        if pet and pet["status"] != "ok":
            return "–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!"
        crud.update_user_status(current_user.user_id, "waiting_confirmation")
        if pet["club_id"] == None:  # noqa
            pet["club_id"] == 0  # noqa
        crud.update_user_data(current_user.user_id, pet["pet_id"], pet["name"],
                              pet["club_id"])
        text = f"–í–∞—à –∞–∫–∫–∞—É–Ω—Ç - {pet['name']}?\n" \
               f"–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –ø—Ä–∏–≤—è–∑—ã–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ " \
               f"–µ–¥–∏–Ω–æ–∂–¥—ã, –∞ –µ–≥–æ —Å–º–µ–Ω–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞!\n" \
               f"–í—Å—ë, —á—Ç–æ –í—ã –∫—É–ø–∏—Ç–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –Ω–∞ " \
               f"—É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ –∞–∫–∫–∞—É–Ω—Ç. "
        await event.answer(message=text,
                           keyboard=CONFIRMATION.get_keyboard())
    elif current_user.status == 'newbie':
        crud.update_user_status(current_user.user_id, "waiting_name")
        text = "üôã‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –ø—Ä–∏–≤—è–∂–∏—Ç–µ —Å–≤–æ–π " \
               "–∞–∫–∫–∞—É–Ω—Ç, –æ—Ç–ø—Ä–∞–≤–∏–≤ –Ω–∞–º ID –∏–ª–∏ –Ω–∏–∫ –ø–∏—Ç–æ–º—Ü–∞. \nüëâ –ü—Ä–∏–º–µ—Ä: " \
               "8988812 –∏–ª–∏ Monster\n\n" \
               "‚ùó –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ –±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –í –ø—Ä–æ—Ü–µ—Å—Å–µ " \
               "—Ä–∞–±–æ—Ç—ã –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –æ—à–∏–±–∫–∏. –ï—Å–ª–∏ –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –æ—à–∏–±–∫—É, " \
               "—Ç–æ –≤—ã–∑–æ–≤–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥–æ–π /report."
        await event.answer(message=text)
    elif current_user.status == 'ok' and \
            event.object.object.message.text.lower() in ("–º–µ–Ω—é", "—Å—Ç–∞—Ä—Ç",
                                                         "–Ω–∞—á–∞—Ç—å", "–ø–æ—á–∞—Ç–æ–∫"):
        await menu(current_user, event)
    else:
        black_list = [485026972, 578062764]
        if current_user.user_id in black_list:
            pass
        else:
            text = f"{current_user.first_name} {current_user.last_name} ({current_user.user_id}) –ø–∏—à–µ—Ç.\n\n" \
                   f"–ï–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: ¬´{event.object.object.message.text}¬ª"
            notice(message=text)
