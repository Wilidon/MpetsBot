import random
import time
from datetime import datetime, timedelta
import copy

import pickledb
import requests
from vkwave.bots import SimpleLongPollBot

from config import get_settings, get_db
from mpetsapi import MpetsApi
from sql import crud
from tzlocal import get_localzone

from utils.constants import get_keyboard

month = {"01": "—è–Ω–≤–∞—Ä—è", "02": "—Ñ–µ–≤—Ä–∞–ª—è", "03": "–º–∞—Ä—Ç–∞",
         "04": "–∞–ø—Ä–µ–ª—è", "05": "–º–∞—è", "06": "–∏—é–Ω—è",
         "07": "–∏—é–ª—è", "08": "–∞–≤–≥—É—Å—Ç–∞", "09": "—Å–µ–Ω—Ç—è–±—Ä—è",
         "10": "–æ–∫—Ç—è—Ä–±—Ä—è", "11": "–Ω–æ—è–±—Ä—è", "12": "–¥–µ–∫–∞–±—Ä—è"}

access_name = {0: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
               1: "VIP-–∏–≥—Ä–æ–∫",
               2: "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
               3: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"}

user_tasks_list = {"avatar": "–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä {} –Ω–∞ 1 —á–∞—Å.\n "
                             "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {} \n"
                             "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 ‚≠ê –∏ 1-3 üèÆ\n",
                   "anketa": "–°–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ ¬´–û —Å–µ–±–µ¬ª –Ω–∞ 30 –º–∏–Ω—É—Ç.\n "
                             "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {} \n"
                             "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 ‚≠ê –∏ 1-3 üèÆ\n",
                   "30online": "–ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –æ–Ω–ª–∞–π–Ω–∞ 30 –º–∏–Ω—É—Ç.\n "
                               "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {} \n"
                               "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 ‚≠ê –∏ 1-3 üèÆ\n",
                   "in_online": "–í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É –≤ {} –ø–æ –ú–°–ö.\n "
                                "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {} \n"
                                "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 ‚≠ê –∏ 1-3 üèÆ\n",
                   "charm": "–ù–∞–±—Ä–∞—Ç—å –æ—á–∫–∏ –≤ –∏–≥—Ä–µ ¬´–°–Ω–µ–∂–∫–∏¬ª\n"
                            "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {} \n"
                            "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 ‚≠ê –∏ 1-3 üèÆ\n",
                   "races": "–ù–∞–±—Ä–∞—Ç—å –æ—á–∫–∏ –≤ –∏–≥—Ä–µ ¬´–°–∫–∞—á–∫–∏¬ª\n"
                            "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {} \n"
                            "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 ‚≠ê –∏ 1-3 üèÆ\n"
                   }
holiday_0214 = {"gifts": "–û–±–º–µ–Ω—è—Ç—å—Å—è –ø–æ–¥–∞—Ä–∫–∞–º–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ ¬´–ü—Ä–∞–∑–¥–Ω–∏–∫–∏: –î–µ–Ω—å –°–≤. –í–∞–ª–µ–Ω—Ç–∏–Ω–∞¬ª —Å 15 —Ä–∞–∑–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏\n"
                        "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}\n"
                        "üéñ –ù–∞–≥—Ä–∞–¥–∞: 10 –∞–Ω–≥–µ–ª–æ–≤\n",
                "avatar": "–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –Ω–∞ –≤—ã–±–æ—Ä: –í–ª—é–±–ª—ë–Ω–Ω—ã–π –∫–æ—Ç–∏–∫, –í–ª—é–±–ª—ë–Ω–Ω–∞—è –∫–æ—à–∫–∞  –Ω–∞ 24 —á–∞—Å–∞\n"
                          "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}—á\n"
                          "üéñ –ù–∞–≥—Ä–∞–¥–∞: 2 –∞–Ω–≥–µ–ª–∞ \n",
                "anketa": "–ü–æ—Å—Ç–∞–≤–∏—Ç—å ¬´‚ù§Ô∏è¬ª –≤ –∞–Ω–∫–µ—Ç—É –Ω–∞ 24 —á–∞—Å–∞\n"
                          "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}—á\n"
                          "üéñ –ù–∞–≥—Ä–∞–¥–∞: 2 –∞–Ω–≥–µ–ª–∞\n",
                }

holiday_0214_completed = {
    "gifts": "–û–±–º–µ–Ω—è—Ç—å—Å—è –ø–æ–¥–∞—Ä–∫–∞–º–∏ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ ¬´–ü—Ä–∞–∑–¥–Ω–∏–∫–∏: –î–µ–Ω—å –°–≤. –í–∞–ª–µ–Ω—Ç–∏–Ω–∞¬ª —Å 15 —Ä–∞–∑–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏\n",
    "avatar": "–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É –Ω–∞ –≤—ã–±–æ—Ä: –í–ª—é–±–ª—ë–Ω–Ω—ã–π –∫–æ—Ç–∏–∫, –í–ª—é–±–ª—ë–Ω–Ω–∞—è –∫–æ—à–∫–∞  –Ω–∞ 24 —á–∞—Å–∞\n",
    "anketa": "–ü–æ—Å—Ç–∞–≤–∏—Ç—å ¬´‚ù§Ô∏è¬ª –≤ –∞–Ω–∫–µ—Ç—É –Ω–∞ 24 —á–∞—Å–∞\n", }

user_completed_tasks_list = {"avatar": "–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∞–≤–∞—Ç–∞—Ä {}\n",
                             "anketa": "–°–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ ¬´–û —Å–µ–±–µ¬ª\n",
                             "30online": "–ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –∏–∑ –æ–Ω–ª–∞–π–Ω–∞ 30 –º–∏–Ω—É—Ç\n",
                             "in_online": "–í–æ–π—Ç–∏ –≤ –∏–≥—Ä—É –≤ {} –ø–æ –ú–°–ö\n",
                             "charm": "–ù–∞–±—Ä–∞—Ç—å –æ—á–∫–∏ –≤ –∏–≥—Ä–µ ¬´–°–Ω–µ–∂–∫–∏¬ª\n",
                             "races": "–ù–∞–±—Ä–∞—Ç—å –æ—á–∫–∏ –≤ –∏–≥—Ä–µ ¬´–°–∫–∞—á–∫–∏¬ª\n"}

club_tasks = ["exp", "heart", "coin",
              "get_gift",
              "get_random_gift",
              "send_specific_gift_any_player",
              "send_gift_any_player",
              # ["send_gift_player"],
              # ["send_specific_gift_player"],
              # ["chat"],
              "play",
              # "thread",
              "upRank",
              "acceptPlayer"]

club_tasks_list = {"coin": "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–ø–∏–ª–∫—É –º–æ–Ω–µ—Ç–∞–º–∏\n"
                           "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                           "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "heart": "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–ø–∏–ª–∫—É —Å–µ—Ä–¥—Ü–∞–º–∏\n"
                            "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}.\n"
                            "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "exp": "–ù–∞–±—Ä–∞—Ç—å –æ–ø—ã—Ç\n"
                          "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}\n"
                          "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "get_gift": "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ ¬´{}¬ª –æ—Ç –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞\n"
                               "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}\n"
                               "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "get_random_gift": "–ü–æ–ª—É—á–∏—Ç—å –ª—é–±–æ–π –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞\n"
                                      "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}\n"
                                      "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "send_specific_gift_any_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ ¬´{}¬ª "
                                                    "–ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É\n"
                                                    "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}\n"
                                                    "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n"
                                                    "\n–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø—Ä–∏–Ω—è–ª "
                                                    "–ø–æ–¥–∞—Ä–æ–∫, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "
                                                    "–æ—Ç–ø—Ä–∞–≤—å—Ç–µ +check 1, "
                                                    "–≥–¥–µ 1 ‚Äî id –∏–≥—Ä–æ–∫–∞\n\n",
                   "send_gift_any_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–π –ø–æ–¥–∞—Ä–æ–∫ –ª—é–±–æ–º—É "
                                           "–∏–≥—Ä–æ–∫—É. \n "
                                           "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                                           "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n"
                                           "\n–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø—Ä–∏–Ω—è–ª "
                                           "–ø–æ–¥–∞—Ä–æ–∫, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "
                                           "–æ—Ç–ø—Ä–∞–≤—å—Ç–µ +check 1, "
                                           "–≥–¥–µ 1 ‚Äî id –∏–≥—Ä–æ–∫–∞.\n\n",
                   "send_gift_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–π –ø–æ–¥–∞—Ä–æ–∫ –∏–≥—Ä–æ–∫—É {}. \n "
                                       "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                                       "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ\n",
                   "send_specific_gift_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ {} –∏–≥—Ä–æ–∫—É {}.\n"
                                                "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                                                "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "chat": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–ª—É–±–Ω–æ–π —á–∞—Ç. \n "
                           "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                           "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "play": "–°—ã–≥—Ä–∞—Ç—å –≤ –ü–æ–∏–≥—Ä–∞–π–∫—É (–§–æ—Ä—É–º –ö–ª—É–±—ã)\n "
                           "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                           "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "thread": "–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ –≤–∞—à–µ–≥–æ –∫–ª—É–±–∞ "
                             "–Ω–∞ –≥–æ—Å—Ç–µ–≤–æ–º —Ñ–æ—Ä—É–º–µ \n "
                             "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                             "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "upRank": "–ü–æ–≤—ã—Å–∏—Ç—å –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–ª—É–±–µ \n "
                             "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                             "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   "acceptPlayer": "–ü—Ä–∏–Ω—è—Ç—å –≤ –∫–ª—É–± –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞. \n "
                                   "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {} –∏–∑ {}. \n"
                                   "üéñ –ù–∞–≥—Ä–∞–¥–∞: 1 üéÑ –∏ 1-3 üèµ\n",
                   }

club_completed_tasks_list = {"coin": "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–ø–∏–ª–∫—É –º–æ–Ω–µ—Ç–∞–º–∏. \n",
                             "heart": "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–ø–∏–ª–∫—É —Å–µ—Ä–¥—Ü–∞–º–∏. \n",
                             "exp": "–ù–∞–±—Ä–∞—Ç—å –æ–ø—ã—Ç. \n",
                             "get_gift": "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ {} –æ—Ç –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞. \n",
                             "get_random_gift": "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –¥—Ä—É–≥–æ–≥–æ "
                                                "–∏–≥—Ä–æ–∫–∞. \n",
                             "send_specific_gift_any_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ "
                                                              "{} –ª—é–±–æ–º—É "
                                                              "–∏–≥—Ä–æ–∫—É.\n",
                             "send_gift_any_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–π –ø–æ–¥–∞—Ä–æ–∫ "
                                                     "–ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É.\n",
                             "send_gift_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –∏–≥—Ä–æ–∫—É {}.\n",
                             "send_specific_gift_player": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ {} "
                                                          "–∏–≥—Ä–æ–∫—É {}.\n",
                             "send_gift": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –¥—Ä—É–≥–æ–º—É –∏–≥—Ä–æ–∫—É. \n",
                             "chat": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–ª—É–±–Ω–æ–π —á–∞—Ç. \n",
                             "play": "–°—ã–≥—Ä–∞—Ç—å –≤ –ü–æ–∏–≥—Ä–∞–π–∫—É (–§–æ—Ä—É–º –ö–ª—É–±—ã) \n",
                             "thread": "–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ "
                                       "–≤–∞—à–µ–≥–æ –∫–ª—É–±–∞ –Ω–∞ –≥–æ—Å—Ç–µ–≤–æ–º —Ñ–æ—Ä—É–º–µ\n",
                             "upRank": "–ü–æ–≤—ã—Å–∏—Ç—å –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–ª—É–±–µ. \n",
                             "acceptPlayer": "–ü—Ä–∏–Ω—è—Ç—å –≤ –∫–ª—É–± –ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞. \n"}

gifts_name = [[1, "üçì–ö–ª—É–±–Ω–∏—á–∫–∞"], [2, "ü¶ã–ë–∞–±–æ—á–∫–∞"],
              [3, "üß≥ –ß–µ–º–æ–¥–∞–Ω —Å –¥–µ–Ω—å–≥–∞–º–∏"],
              [4, "üê∞–£—à–∫–∏ –∑–∞–π–∫–∏"], [5, "üíç –ö–æ–ª—å—Ü–æ –≤ —Ä–∞–∫—É—à–∫–µ"],
              [6, "üçπ–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫"], [7, "ü•• –ö–æ–∫–æ—Å–æ–≤—ã–π —Å–æ–∫"],
              [8, "üåπ –ë—É–∫–µ—Ç —Ä–æ–∑"], [9, "üèù –û—Å—Ç—Ä–æ–≤"],
              [10, "ü•§–õ–∏–º–æ–Ω–∞–¥ —Å —Å–µ–º–µ—á–∫–∞–º–∏"],
              [11, "üíò–°–µ—Ä–¥–µ—á–∫–æ"], [12, "üêø–°–∫—Ä–∞—Ç"],
              [13, "‚öΩÔ∏è–§—É—Ç–±–æ–ª—å–Ω—ã–π –º—è—á"], [14, "‚òïÔ∏è –ö–æ—Ñ–µ"], [15, "üèç –ú–æ—Ç–æ—Ü–∏–∫–ª"],
              [16, "üç®–ú–æ—Ä–æ–∂–µ–Ω–æ–µ"], [17, "üß∏–í–ª—é–±–ª—ë–Ω–Ω—ã–µ –º–∏—à–∫–∏"],
              [18, "üêá–ò–≥—Ä—É—à–µ—á–Ω—ã–π –∑–∞–π—á–∏–∫"],
              [19, "üö¢ –ö–æ—Ä–∞–±–ª—å"], [20, "üçï–ü–∏—Ü—Ü–∞"], [21, "üéê–Å–ª–æ—á–Ω—ã–π —à–∞—Ä–∏–∫"],
              [22, "üéÑ–Å–ª–æ—á–∫–∞"],
              [23, "‚õÑÔ∏è–°–Ω–µ–≥–æ–≤–∏–∫"], [24, "üéÖ–î–µ–¥ –ú–æ—Ä–æ–∑"],
              [25, "üç∑–ë—É—Ç—ã–ª–∫–∞ –≤–∏–Ω–∞"], [26, "üöÇ–¢–∞–Ω–∫"],
              [27, "üë®üèª‚Äç‚úàÔ∏è–®–ª—è–ø–∞ –æ—Ñ–∏—Ü–µ—Ä–∞"],
              [28, "ü•Æ–¢–æ—Ä—Ç–∏–∫ –≤ –≤–∏–¥–µ —Å–µ—Ä–¥—Ü–∞"],
              [29, "üéÇ–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Ç–æ—Ä—Ç"], [30, "üíç–ö–æ–ª—å—Ü–æ"],
              [31, "üê≠–ú—ã—à–∫–∞ –≤ –º–µ—à–∫–µ"], [32, "ü•¢–í–æ–ª—à–µ–±–Ω–∞—è –ø–∞–ª–æ—á–∫–∞"],
              [33, "üßôüèª‚Äç‚ôÄÔ∏è–®–ª—è–ø–∞ –∫–æ–ª–¥—É–Ω—å–∏"],
              [34, "üëº–ê–Ω–≥–µ–ª –ê–º—É—Ä"], [35, "üïµüèª‚Äç‚ôÄÔ∏è–î–µ–≤—É—à–∫–∞"], [45, "üåº–†–æ–º–∞—à–∫–∞"],
              [46, "üç´–®–æ–∫–æ–ª–∞–¥–∫–∞"],
              [47, "üêà–†—ã–∂–∏–π –∫–æ—Ç–∏–∫"], [48, "üçã–ß–∞–π —Å –ª–∏–º–æ–Ω–æ–º"],
              [49, "üê±–ú–∞–Ω—ç–∫–∏-–Ω—ç–∫–æ"],
              [50, "üê≤–ú–æ–Ω—Å—Ç—Ä–∏–∫"],
              [51, "ü¶ù –ï–Ω–æ—Ç–∏–∫"], [52, "üöó –ú–∞—à–∏–Ω–∞"]]

avatar_name = [[0, "–ö–æ—à–µ—á–∫–∞"], [1, "–ö–æ—Ç–µ–Ω–æ–∫"], [3, "–ò–≥—Ä–∏–≤–∞—è –∫–æ—à–µ—á–∫–∞"],
               [4, "–í–ª—é–±–ª–µ–Ω–Ω—ã–π –∫–æ—Ç–∏–∫"], [5, "–ò–≥—Ä–∏–≤—ã–π –∫–æ—Ç–∏–∫"],
               [6, "–°–∏–∞–º—Å–∫–∞—è –∫–æ—à–µ—á–∫–∞"], [7, "–ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π –∫–æ—Ç–∏–∫"],
               [8, "–í–ª—é–±–ª–µ–Ω–Ω–∞—è –∫–æ—à–µ—á–∫–∞"], [9, "–õ–∏—Å–∏—á–∫–∞"],
               [10, "–•–æ–º—è—á–æ–∫"], [11, "–î—Ä–∞–∫–æ–Ω—á–∏–∫"], [12, "–©–µ–Ω–æ–∫"],
               [13, "–°–æ–±–∞—á–∫–∞"], [16, "–°–æ–≤–∞"], [17, "–ü–∞–Ω–¥–∞"],
               [18, "–ö—Ä–æ–ª–∏–∫"], [19, "–¢–∏–≥—Ä–µ–Ω–æ–∫"], [20, "–ß–µ—Ä–µ–ø–∞—à–∫–∞"]]

prizes = {10: "–ú–æ–Ω–µ—Ç–∫–∞ —É–¥–∞—á–∏",
          25: "200 –º–æ–Ω–µ—Ç",
          40: "5m ‚ù§Ô∏è",
          70: "25 –∑–æ–ª–æ—Ç—ã—Ö –ø–µ—Ä—å–µ–≤ –∏ 5 ‚≠êÔ∏è",
          100: "shop_1",
          125: "shop_2",
          160: "400 –º–æ–Ω–µ—Ç",
          177: "shop_3"}

c_prizes = {30: "2 ‚≠êÔ∏è –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º",
            70: "300 –º–æ–Ω–µ—Ç –≤ –∫–æ–ø–∏–ª–∫—É –∫–ª—É–±–∞",
            160: "200k –æ–ø—ã—Ç–∞",
            230: "5m ‚ù§Ô∏è –≤ –∫–æ–ø–∏–ª–∫—É –∫–ª—É–±–∞ –∏ –ø–æ 5 üëº –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º",
            350: "15 üéÑ –∏ 5 üèµ",
            510: "1 üîë –∏ –ø–æ 15 —Å–µ—Ä–µ–±—Ä–∞ –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º",
            620: "10m ‚ù§Ô∏è",
            800: "2‚Äô000 –º–æ–Ω–µ—Ç",
            980: "–ø–æ 1 ‚öôÔ∏è –∏ –ø–æ 1 –º–æ–Ω–µ—Ç–∫–µ —É–¥–∞—á–∏ –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º",
            1111: "400k –æ–ø—ã—Ç–∞ –≤ –∫–æ–ø–∏–ª–∫—É, 15m ‚ù§Ô∏è –∏ 1 üéÅ –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º—É—á–∞—Å—Ç–≤—É—é—â–∏–º",
            1239: "2 üîë –∏ 10 —Ñ–∏—à–µ–∫"}

shop1 = {"item1": "300 –º–æ–Ω–µ—Ç",
         "item2": "2 –≤–æ–ª—à–µ–±–Ω—ã—Ö —à–µ—Å—Ç–µ—Ä–Ω–∏",
         "item3": "20 –∞–Ω–≥–µ–ª–æ–≤"}
shop2 = {"item1": "17 —Å–µ—Ä–µ–±—Ä–∞",
         "item2": "5m ‚ù§Ô∏è",
         "item3": "2 –º–æ–Ω–µ—Ç–∫–∏ —É–¥–∞—á–∏",
         "item4": "13 –∞–Ω–≥–µ–ª–æ–≤"}
shop3 = {"item1": "15üèÆ",
         "item2": "5m ‚ù§Ô∏è",
         "item3": "4 ‚öôÔ∏è",
         "item4": "10 üëº",
         "item5": "15 üçø ",
         "imte6": "5 ‚≠êÔ∏è"}


async def get_limits(level):
    if 12 <= level <= 18:
        return {"coin": 3, "heart": 500, "exp": 1000}
    elif 19 <= level <= 25:
        return {"coin": 4, "heart": 800, "exp": 2000}
    elif 26 <= level <= 30:
        return {"coin": 5, "heart": 1500, "exp": 5000}
    elif 31 <= level <= 35:
        return {"coin": 6, "heart": 3000, "exp": 10000}
    elif 36 <= level <= 40:
        return {"coin": 7, "heart": 8000, "exp": 15000}
    elif 41 <= level <= 45:
        return {"coin": 8, "heart": 10000, "exp": 30000}
    elif 46 <= level <= 49:
        return {"coin": 9, "heart": 15000, "exp": 50000}
    elif level == 50:
        return {"coin": 10, "heart": 30000, "exp": 100000}


def get_next_utc_unix_00_00():
    day = timedelta(1)
    local_tz = get_localzone()
    now = datetime.now(local_tz)
    t = now.replace(tzinfo=None) + day
    t = str(t).split(" ")[0]
    t += " 00:00:00"
    next_utc = int(time.mktime(time.strptime(t, '%Y-%m-%d %H:%M:%S')))
    return next_utc


async def coin_task(task, pet_id, club_id):
    try:
        today = int(datetime.today().strftime("%Y%m%d"))
        club = crud.get_club(club_id)
        mpets = MpetsApi(club.bot_name, club.bot_password)
        resp = await mpets.login()
        if resp["status"] == "error":
            # logging
            return False
        pet = await mpets.view_profile(pet_id)
        if pet["status"] == "error":
            # loggin
            return False
        progress = pet["club_coin"]
        level = await mpets.view_profile(pet_id)
        limits = await get_limits(level["level"])
        end = progress + limits["coin"]
        crud.update_club_task_v2(id=task.id, task_name="coin",
                                 progress=progress, end=end, date=today)
        return True
    except Exception:
        return False


async def heart_task(task, pet_id, club_id):
    try:
        today = int(datetime.today().strftime("%Y%m%d"))
        club = crud.get_club(club_id)
        mpets = MpetsApi(club.bot_name, club.bot_password)
        resp = await mpets.login()
        if resp["status"] == "error":
            # logging
            return False
        page, progress, step, counter = 1, 0, True, 0
        while step:
            try:
                pets = await mpets.club_budget_history_all(club_id, 2, page)
                if not pets["players"]:
                    break
                for pet in pets["players"]:
                    if pet["pet_id"] == pet_id:
                        progress = pet["count"]
                        step = False
                        break
                page += 1
            except Exception:
                counter += 1
                if counter >= 5:
                    return False
        level = await mpets.view_profile(pet_id)
        limits = await get_limits(level["level"])
        end = int(progress) + limits["heart"]
        crud.update_club_task_v2(id=task.id, task_name="heart",
                                 progress=progress, end=end, date=today)
        return True
    except Exception:
        return False


async def exp_task(task, pet_id, club_id):
    try:
        today = int(datetime.today().strftime("%Y%m%d"))
        club = crud.get_club(club_id)
        mpets = MpetsApi(club.bot_name, club.bot_password)
        resp = await mpets.login()
        if resp["status"] == "error":
            # logging
            return False
        page, progress, step, counter = 1, 0, True, 0
        while step:
            try:
                pets = await mpets.club_budget_history_all(club_id, 3, page)
                if not pets["players"]:
                    break
                for pet in pets["players"]:
                    if pet["pet_id"] == pet_id:
                        progress = pet["count"]
                        step = False
                        break
                page += 1
            except Exception:
                counter += 1
                if counter >= 5:
                    return False
        level = await mpets.view_profile(pet_id)
        limits = await get_limits(level["level"])
        end = int(progress) + limits["exp"]
        crud.update_club_task_v2(id=task.id, task_name="exp",
                                 progress=progress, end=end, date=today)
        return True
    except Exception:
        return False


async def get_gift_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    present_id = gifts_name.index(random.choice(gifts_name))
    task_name = "get_gift_" + str(present_id)
    crud.update_club_task_v2(id=task.id, task_name=task_name,
                             progress=0, end=1, date=today)
    return True


async def get_random_gift_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    task_name = "get_random_gift_0"
    crud.update_club_task_v2(id=task.id, task_name=task_name,
                             progress=0, end=1, date=today)
    return True


async def send_specific_gift_any_player_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    present_id = gifts_name.index(random.choice(gifts_name))
    task_name = "send_specific_gift_any_player_" + str(present_id)
    crud.update_club_task_v2(id=task.id, task_name=task_name,
                             progress=0, end=1, date=today)
    return True


async def send_gift_any_player_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    task_name = "send_gift_any_player_0"
    crud.update_club_task_v2(id=task.id, task_name=task_name,
                             progress=0, end=1, date=today)
    return True


async def send_gift_player_task(user_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    # todo
    crud.create_club_task_for_user(user_id=user_id, task_name=task_name,
                                   progress=0, end=1, date=today)


async def send_specific_gift_player_task(user_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    # todo
    crud.create_club_task_for_user(user_id=user_id, task_name=task_name,
                                   progress=0, end=1, date=today)


async def chat_task(user_id):
    # todo
    today = int(datetime.today().strftime("%Y%m%d"))
    crud.create_club_task_for_user(user_id=user_id, task_name="chat",
                                   progress=0, end=1, date=today)


async def play_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    crud.update_club_task_v2(id=task.id, task_name="play",
                             progress=0, end=5, date=today)


async def thread_task(user_id):
    # todo
    today = int(datetime.today().strftime("%Y%m%d"))
    crud.create_club_task_for_user(user_id=user_id, task_name="thread",
                                   progress=0, end=1, date=today)


async def upRank_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    crud.update_club_task_v2(id=task.id, task_name="upRank",
                             progress=0, end=1, date=today)
    return True


async def acceptPlayer_task(task):
    today = int(datetime.today().strftime("%Y%m%d"))
    crud.update_club_task_v2(id=task.id, task_name="acceptPlayer",
                             progress=0, end=1, date=today)
    return True


async def check_level_pet(pet_id):
    mpets = MpetsApi()
    await mpets.start()
    return await mpets.view_profile(pet_id)


async def get_task_name(task_name):
    if "send" in task_name:
        return task_name.rsplit("_", maxsplit=1)[0]
    elif "get" in task_name:
        # present_id = task_name.split("_")[-1]
        return task_name.rsplit("_", maxsplit=1)[0]
    else:
        return task_name


async def creation_club_tasks(user_task):
    c = 0
    db = get_db()
    local_tasks = db.lgetall("club_tasks")
    today = int(datetime.today().strftime("%Y%m%d"))
    all_tasks = crud.get_club_tasks(user_task.user_id, today)
    user = crud.get_user(user_task.user_id)
    if len(all_tasks) < 3:
        for task in all_tasks:
            task_name = await get_task_name(task.task_name)
            try:
                local_tasks.pop(local_tasks.index(task_name))
            except Exception:
                pass
    while c < 1:
        num = random.randint(0, len(local_tasks) - 1)
        if local_tasks[num] == "coin":
            if await coin_task(user_task,
                               user.pet_id, user.club_id) is False:
                continue
        elif local_tasks[num] == "heart":
            if await heart_task(user_task,
                                user.pet_id, user.club_id) is False:
                continue
        elif local_tasks[num] == "exp":
            if await exp_task(user_task,
                              user.pet_id, user.club_id) is False:
                continue
        elif local_tasks[num] == "get_gift":
            if await get_gift_task(user_task) is False:
                continue
        elif local_tasks[num] == "get_random_gift":
            if await get_random_gift_task(user_task) is False:
                continue
        elif local_tasks[num] == "send_specific_gift_any_player":
            if await send_specific_gift_any_player_task(user_task) is False:
                continue
        elif local_tasks[num] == "send_gift_any_player":
            if await send_gift_any_player_task(user_task) is False:
                continue
        elif local_tasks[num] == "send_gift_player":
            if await send_gift_player_task(user_task) is False:
                continue
        elif local_tasks[num] == "send_specific_gift_player":
            if await send_specific_gift_player_task(user_task) is False:
                continue
        elif local_tasks[num] == "chat":
            if await chat_task(user_task) is False:
                continue
        elif local_tasks[num] == "play":
            if await play_task(user_task) is False:
                continue
        elif local_tasks[num] == "thread":
            if await thread_task(user_task) is False:
                continue
        elif local_tasks[num] == "upRank":
            profile = await check_level_pet(user.pet_id)
            if profile["status"] == "ok" and \
                    profile["rank"] in ['–ê–∫—Ç–∏–≤–∏—Å—Ç', '–ö—É—Ä–∞—Ç–æ—Ä',
                                        '–ó–∞–º. –î–∏—Ä–µ–∫—Ç–æ—Ä–∞', '–î–∏—Ä–µ–∫—Ç–æ—Ä']:
                if await upRank_task(user_task) is False:
                    continue
            else:
                continue
        elif local_tasks[num] == "acceptPlayer":
            profile = await check_level_pet(user.pet_id)
            if profile["status"] == "ok" and \
                    profile["rank"] in ['–ö—É—Ä–∞—Ç–æ—Ä',
                                        '–ó–∞–º. –î–∏—Ä–µ–∫—Ç–æ—Ä–∞', '–î–∏—Ä–µ–∫—Ç–æ—Ä']:
                if await acceptPlayer_task(user_task) is False:
                    continue
            else:
                continue
        c += 1


async def avatar_task(user_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    avatar = avatar_name.index(random.choice(avatar_name))
    task_name = f"avatar_{avatar}:0"
    crud.create_user_task_for_user(user_id=user_id, task_name=task_name,
                                   progress=0, end=60, date=today)


async def anketa_task(user_id, pet_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    mpets = MpetsApi()
    await mpets.start()
    profile = await mpets.view_anketa(pet_id)
    if profile["status"] != "ok":
        return False
    task_name = f"anketa_{profile['about']}:0"
    crud.create_user_task_for_user(user_id=user_id, task_name=task_name,
                                   progress=0, end=30, date=today)
    return True


async def online_task(user_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    crud.create_user_task_for_user(user_id=user_id, task_name="30online_0",
                                   progress=0, end=30, date=today)


async def in_online_task(user_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    h = int(datetime.today().strftime("%H"))
    end = 24
    if h <= 11:
        h = random.randint(12, 17)
    if h >= 23:
        return False
    m = random.randint(0, 59)
    if m < 10:
        m = "0" + str(m)
    if h + 2 <= 24:
        end = h + 2
    task_name = f"in_online_{random.randint(h + 1, end)}" \
                f":{m}"
    crud.create_user_task_for_user(user_id=user_id, task_name=task_name,
                                   progress=0, end=1, date=today)
    return True


async def charm_task(user_id, pet_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    rating = crud.get_charm_rating(pet_id=pet_id)
    if rating is None:
        return False
    crud.create_user_task_for_user(user_id=user_id, task_name="charm",
                                   progress=rating.score,
                                   end=rating.score + 30, date=today)


async def races_task(user_id, pet_id):
    today = int(datetime.today().strftime("%Y%m%d"))
    rating = crud.get_races_rating(pet_id=pet_id)
    if rating is None:
        return False
    crud.create_user_task_for_user(user_id=user_id, task_name="races",
                                   progress=rating.score,
                                   end=rating.score + 30, date=today)


async def creation_user_tasks(user):
    today = int(datetime.today().strftime("%Y%m%d"))
    c = 0
    all_tasks = crud.get_user_tasks(user.user_id, today)
    if all_tasks:
        return 0
    db = get_db()
    local_tasks = db.lgetall("user_tasks")
    while c < 3:
        num = random.randint(0, len(local_tasks) - 1)
        if local_tasks[num] == "avatar":
            await avatar_task(user.user_id)
        elif local_tasks[num] == "anketa":
            if await anketa_task(user.user_id, user.pet_id) is False:
                continue
        elif local_tasks[num] == "30online":
            await online_task(user.user_id)
        elif local_tasks[num] == "in_online":
            if await in_online_task(user.user_id) is False:
                local_tasks.pop(num)
                continue
        elif local_tasks[num] == "charm":
            if await charm_task(user.user_id, user.pet_id) is False:
                local_tasks.pop(num)
                continue
        elif local_tasks[num] == "races":
            if await races_task(user.user_id, user.pet_id) is False:
                local_tasks.pop(num)
                continue
        c += 1
        local_tasks.pop(num)


async def creation_valentineDay_tasks(user):
    all_tasks = crud.get_user_tasks(user.user_id, 214)
    if all_tasks:
        return False
    avatars = [[8, "–í–ª—é–±–ª–µ–Ω–Ω–∞—è –∫–æ—à–µ—á–∫–∞"], [4, "–í–ª—é–±–ª–µ–Ω–Ω—ã–π –∫–æ—Ç–∏–∫"]]
    task_name = f"avatar_{random.choice(avatars)[0]}:0"
    crud.create_user_task_for_user(user_id=user.user_id, task_name=task_name,
                                   progress=0, end=24, date=214)
    task_name = "anketa_1:0"
    crud.create_user_task_for_user(user_id=user.user_id, task_name=task_name,
                                   progress=0, end=24, date=214)
    task_name = "gifts"
    crud.create_user_task_for_user(user_id=user.user_id, task_name=task_name,
                                   progress=0, end=15, date=214)
    return True


async def user_prizes(score):
    """
    10 - 1 –ú–æ–Ω–µ—Ç–∫–∞ —É–¥–∞—á–∏
    25 - 200 –º–æ–Ω–µ—Ç
    40 - 5m ‚ù£Ô∏è
    70 - 25 –∑–æ–ª–æ—Ç—ã—Ö –ø–µ—Ä—å–µ–≤ –∏ 5 ‚≠êÔ∏è
    100 - –º–∞–≥–∞–∑–∏–Ω, 1 —Ç–æ–≤–∞—Ä –Ω–∞ –≤—ã–±–æ—Ä (300 –º–æ–Ω–µ—Ç, 2 –≤–æ–ª—à–µ–±–Ω—ã—Ö —à–µ—Å—Ç–µ—Ä–Ω–∏, 20 –∞–Ω–≥–µ–ª–æ–≤ )
    125 - –º–∞–≥–∞–∑–∏–Ω, 2 —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –≤—ã–±–æ—Ä ( 17 —Å–µ—Ä–µ–±—Ä–∞, 2m ‚ù§Ô∏è, 2 –ú–æ–Ω–µ—Ç–∫–∏ —É–¥–∞—á–∏, 13 –∞–Ω–≥–µ–ª–æ–≤ )
    160 - 400 –º–æ–Ω–µ—Ç
    177 - –º–∞–≥–∞–∑–∏–Ω, 3 —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –≤—ã–±–æ—Ä ( 15üèÆ , 5m ‚ù§Ô∏è, 4 ‚öôÔ∏è, 10 üëº , 15 üçø , 5 ‚≠êÔ∏è )
    """
    if int(score) in [10, 25, 40, 70, 100, 125, 160, 177]:
        return True
    return False


async def club_prizes(score):
    """
    30 - 2 ‚≠êÔ∏è –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º
    70 - 300 –º–æ–Ω–µ—Ç –≤ –∫–æ–ø–∏–ª–∫—É –∫–ª—É–±–∞
    160 - 200k –æ–ø—ã—Ç–∞
    230 - 5m —Å–µ—Ä–¥–µ—á–µ–∫ –≤ –∫–æ–ø–∏–ª–∫—É –∫–ª—É–±–∞ –∏ –ø–æ 5 üëº –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º
    350 - 15 üéÑ –∏ 5 —Ñ–∏—à–µ–∫
    510 - 1 –∫–ª—é—á –∏ –ø–æ 15 —Å–µ—Ä–µ–±—Ä–∞ –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º
    620 - 10m —Å–µ—Ä–¥–µ—á–µ–∫
    800 - 2‚Äô000 –º–æ–Ω–µ—Ç
    980 - –ø–æ 1 —à–µ—Å—Ç–µ—Ä–Ω–∏ –∏ –ø–æ 1 –º–æ–Ω–µ—Ç–∫–µ —É–¥–∞—á–∏  –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º
    1111 - 400k –æ–ø—ã—Ç–∞ –≤ –∫–æ–ø–∏–ª–∫—É, 15m —Å–µ—Ä–¥–µ—Ü –∏ –ø–æ–¥–∞—Ä–∫–∏ –≤—Å–µ–º —É—á–∞—Å—Ç–≤—É—é—â–∏–º
    1239 - 2 üîë –∏ 10 —Ñ–∏—à–µ–∫
    """
    if int(score) in [30, 70, 160, 230, 350, 510, 620, 800, 980, 1111, 1239]:
        return True
    return False


def notice(message):
    settings = get_settings()
    requests.get(f"https://api.telegram.org/bot"
                 f"{settings.tg_token}/sendMessage",
                 params={"chat_id": settings.chat_id,
                         "text": message})


async def send_user_notice(user_id, score):
    """
    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ 50 ‚≠êÔ∏è
    –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ—è–≤–∏–ª–∏—Å—å –≤ üè™–ú–∞–≥–∞–∑–∏–Ω–µ.
    """
    settings = get_settings()
    message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ {score} ‚≠êÔ∏è\n" \
              f"–í–∞–º –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω –ø—Ä–∏–∑ ‚Äì {prizes[score]}"
    if "shop" in prizes[score]:
        crud.add_user_item(user_id, prizes[score], score, status=prizes[score])
        message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ {score} ‚≠êÔ∏è\n" \
                  f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–∑—ã –ø–æ—è–≤–∏–ª–∏—Å—å –≤ üè™ –ú–∞–≥–∞–∑–∏–Ω–µ."
    else:
        crud.add_user_item(user_id, prizes[score], score)
    bot = SimpleLongPollBot(tokens=settings.token, group_id=settings.group_id)
    if int(score) in [100, 125, 177]:
        try:
            keyboard = await get_keyboard(shop=True)
            await bot.api_context.messages.send(user_id=user_id,
                                                message=message,
                                                random_id=random.randint(1,
                                                                         9999999),
                                                keyboard=keyboard.get_keyboard())
        except Exception as e:
            text = f"–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}\n" \
                   f"–û—à–∏–±–∫–∞: {e}"
            notice(text)
    else:
        try:
            await bot.api_context.messages.send(user_id=user_id,
                                                message=message,
                                                random_id=random.randint(1,
                                                                         9999999))
        except Exception as e:
            text = f"–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}\n" \
                   f"–û—à–∏–±–∫–∞: {e}"
            notice(text)
    user = crud.get_user(user_id)
    text = f"–ò–≥—Ä–æ–∫ {user.first_name} {user.last_name} | {user.name} " \
           f"({user.pet_id}) –Ω–∞–±—Ä–∞–ª {score} ‚≠ê\n" \
           f"–ü—Ä–∏–∑ ‚Äì {prizes[score]}"
    notice(text)


async def send_club_notice(club_id, score):
    users = crud.get_users_with_club(club_id)
    settings = get_settings()
    message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ {score} üéÑ\n" \
              f"–í–∞–º –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω –ø—Ä–∏–∑ ‚Äì {c_prizes[score]}"
    crud.add_club_item(club_id, c_prizes[score], score)
    for user in users:
        bot = SimpleLongPollBot(tokens=settings.token,
                                group_id=settings.group_id)
        try:
            await bot.api_context.messages.send(user_id=user.user_id,
                                                message=message,
                                                random_id=random.randint(1,
                                                                         9999999))
        except Exception as e:
            text = f"–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}\n" \
                   f"–û—à–∏–±–∫–∞: {e}"
            notice(text)
    club = crud.get_club(club_id)
    text = f"–ö–ª—É–± {club.name} ({club_id}) –Ω–∞–±—Ä–∞–ª {score} üéÑ\n" \
           f"–ü—Ä–∏–∑ ‚Äì {c_prizes[score]}"
    notice(text)


async def add_user_points(user_id, point=True, task_name=None):
    points = 0
    if point:
        points = random.randint(1, 3)
    crud.update_user_stats(user_id, points=points, personal_tasks=1)
    user = crud.get_user(user_id)
    if point:
        text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} ({user_id}) –∑–∞—Ä–∞–±–æ—Ç–∞–ª " \
               f"{points} üèÆ –∏ 1 ‚≠ê."
        # notice(text)
        crud.create_user_log(user_id, task_name, points, 1, int(time.time()))
    user_stats = crud.get_user_stats(user_id)
    if await user_prizes(user_stats.personal_tasks):
        await send_user_notice(user_id, user_stats.personal_tasks)


async def add_club_points(user_id=None, club_id=None, point=True, task_name=None):
    points, user_name = 0, None
    if point:
        points = random.randint(1, 3)
    crud.update_club_stats(club_id, points, 1)
    if user_id:
        user = crud.get_user(user_id)
        user_name = user.name
    club = crud.get_club(club_id)
    if point:
        text = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –∑–∞—Ä–∞–±–æ—Ç–∞–ª –≤ –∫–ª—É–±" \
               f" {club.name} ({club_id}) {points} üèµ –∏ 1 üéÑ."
        # notice(text)
        crud.create_club_log(user_id, task_name, club_id, points, 1, int(time.time()))
    if user_id:
        crud.update_user_stats(user_id, club_tasks=1, club_points=points)
    club_stats = crud.get_club_stats(club_id)
    if await club_prizes(club_stats.total_tasks):
        await send_club_notice(club_id, club_stats.total_tasks)
